openapi: 3.0.0
info:
  title: "Couchsurfing - Flask REST API"
  description: "An API about user and relationships"
  version: "1.0.0"

servers:
  - url: "/api"

components:
  schemas:
    UserToCreate:
      type: "object"
      required:
        - login
      properties:
        login:
          type: "string"
        user_relationship_id:
          type: "string"
          format: "uuid"
    UserToPut:
      type: "object"
      required:
        - login
        - user_relationship_id
      properties:
        login:
          type: "string"
        user_relationship_id:
          type: "string"
          format: "uuid"
  parameters:
    uuid:
      name: "uuid"
      description: "UUId of the user to get"
      in: path
      required: True
      schema:
        type: "string"

paths:
  /user:
    get:
      operationId: "user.read_all"
      tags:
        - "User"
      summary: "Read the list of users"
      responses:
        "200":
          description: "Successfully read user list"
    post:
      operationId: "user.create"
      tags:
        - User
      summary: "Create a user"
      requestBody:
          description: "User to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "user"
                $ref: "#/components/schemas/UserToCreate"
      responses:
        "201":
          description: "Successfully created user"
  /user/{uuid}:
    get:
      operationId: "user.read_one"
      tags:
        - User
      summary: "Read one user"
      parameters:
        - $ref: "#/components/parameters/uuid"
      responses:
        "200":
          description: "Successfully read user"
    put:
      tags:
        - User
      operationId: "user.update"
      summary: "Update a user object completely"
      parameters:
        - $ref: "#/components/parameters/uuid"
      responses:
        "200":
          description: "Successfully updated user"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "user"
              $ref: "#/components/schemas/UserToPut"
    delete:
      tags:
        - User
      operationId: "user.delete"
      summary: "Delete a user"
      parameters:
        - $ref: "#/components/parameters/uuid"
      responses:
        "204":
          description: "Successfully deleted user"